

plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.5"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


repositories {
    mavenCentral()
}


group = 'com.problemfighter.pfspring.multitenant'
version = '1.0.0'


def dependencyList = [
        "pfspring-common",
        "pf-java-object-copier",
]

dependencies {
    dependencyList.each {
        if (findProject(":" + it)){
            implementation project(":" + it)
        }
    }
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

bootJar { enabled = false }
jar { enabled = true }

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    options.addBooleanOption('html5', true)
}

task makeDoc {
    dependsOn(javadoc)
    doLast {
        def docDirectory = file("docs")
        if (!docDirectory.exists()){
            docDirectory.mkdirs();
        }
        delete "docs/javadoc"
        copy{
            from "$buildDir/docs/javadoc"
            into 'docs/javadoc'
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}


Boolean isPublish = false
if (isPublish) {
    bintray {

        user = (project.hasProperty('bintrayUser') ? project.property('bintrayUser') : "hmtmcse" )
        key =  (project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : "123" )
        publish = true
        override = true
        publications = ['mavenJava']
        pkg {
            repo = 'java'
            name = 'com.problemfighter.pfspring.multitenant'
            desc = 'Problem Fighter Spring Boot Multi Tenant'
            vcsUrl = 'https://github.com/problemfighter/pfspring-multi-tenant.git'
            websiteUrl = 'https://github.com/problemfighter/pfspring-multi-tenant'
            issueTrackerUrl = 'https://github.com/problemfighter/pfspring-multi-tenant/issues'
            licenses = ['Apache-2.0']
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = 'pfspring-multi-tenant'
                groupId = 'com.problemfighter.pfspring.multitenant'
                from components.java
                artifact sourcesJar
                artifact javadocJar
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
                pom {
                    name = 'Problem Fighter Spring Boot Multi Tenant'
                    description = 'Problem Fighter Spring Boot Multi Tenant'
                    url = 'http://www.hmtmcse.com/opensource/pfspring/multitenant'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'hmtmcse'
                            name = 'H.M Touhid Mia'
                            email = 'hmtm.cse@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/problemfighter/pfspring-multi-tenant.git'
                        developerConnection = 'scm:git:https://github.com/problemfighter/pfspring-multi-tenant.git'
                        url = 'https://github.com/problemfighter/pfspring-multi-tenant'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}

